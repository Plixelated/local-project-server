// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using project_model;

#nullable disable

namespace project_model.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20250426055206_FixEntryOriginFK")]
    partial class FixEntryOriginFK
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("project_model.Entry", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("origin");

                    b.HasKey("ID");

                    b.ToTable("Entry");
                });

            modelBuilder.Entity("project_model.Values", b =>
                {
                    b.Property<int>("SubmissionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("submission_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SubmissionID"));

                    b.Property<string>("EntryOrigin")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("entry_origin");

                    b.Property<decimal>("FractionCommunication")
                        .HasColumnType("decimal(3,2)")
                        .HasColumnName("f_c");

                    b.Property<decimal>("FractionIntelligence")
                        .HasColumnType("decimal(3,2)")
                        .HasColumnName("f_i");

                    b.Property<decimal>("FractionLife")
                        .HasColumnType("decimal(3,2)")
                        .HasColumnName("f_l");

                    b.Property<decimal>("FrequencyPlanets")
                        .HasColumnType("decimal(3,2)")
                        .HasColumnName("f_p");

                    b.Property<long>("Length")
                        .HasColumnType("bigint")
                        .HasColumnName("l");

                    b.Property<decimal>("NearEarth")
                        .HasColumnType("decimal(3,2)")
                        .HasColumnName("n_e");

                    b.Property<decimal>("RateStars")
                        .HasColumnType("decimal(3,2)")
                        .HasColumnName("r_s");

                    b.Property<int?>("entry_origin")
                        .HasColumnType("integer");

                    b.HasKey("SubmissionID");

                    b.HasIndex("EntryOrigin");

                    b.ToTable("Values", t =>
                        {
                            t.HasCheckConstraint("CK_NonNegative_FractionCommunication_Values_Only", "f_c >= 0");

                            t.HasCheckConstraint("CK_NonNegative_FractionIntelligence_Values_Only", "f_i >= 0");

                            t.HasCheckConstraint("CK_NonNegative_FractionLife_Values_Only", "f_l >= 0");

                            t.HasCheckConstraint("CK_NonNegative_FrequencyPlanet_Values_Only", "f_p >= 0");

                            t.HasCheckConstraint("CK_NonNegative_Length_Values_Only", "l >= 0");

                            t.HasCheckConstraint("CK_NonNegative_NearEarth_Values_Only", "n_e >= 0");

                            t.HasCheckConstraint("CK_NonNegative_RateStars_Values_Only", "r_s >= 0");

                            t.Property("entry_origin")
                                .HasColumnName("entry_origin1");
                        });
                });

            modelBuilder.Entity("project_model.Values", b =>
                {
                    b.HasOne("project_model.Entry", "Entry")
                        .WithMany("SubmittedValues")
                        .HasForeignKey("EntryOrigin")
                        .HasPrincipalKey("Origin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Entry_Submission");

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("project_model.Entry", b =>
                {
                    b.Navigation("SubmittedValues");
                });
#pragma warning restore 612, 618
        }
    }
}
